@model reSports_Proyect_MM.Models.Equipo

@{
    ViewData["Title"] = "Edit";
}

<div class="row">
    <div class="col-md-4 p-3" style="background-color:white; border-radius:10px">
        <div>
            <h1>Editar Equipo</h1>
            <hr />
        </div>
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group" hidden>
                <label asp-for="Id" class="control-label"></label>
                <input  readonly asp-for="Id" class="form-control" />
                <span asp-validation-for="Id" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Nombre" class="control-label"></label>
                <input asp-for="Nombre" class="form-control" />
                <span asp-validation-for="Nombre" class="text-danger"></span>
            </div>
            <span>
                @Html.RadioButtonFor(m => m.Genero, 0, new { Checked = Model != null && Model.Genero == 0 })
                @Html.LabelFor(m => m.Nombre, "Masculino")
            </span>
            <span>
                @Html.RadioButtonFor(m => m.Genero, 1, new { Checked = Model != null && Model.Genero == 1 })
                @Html.LabelFor(m => m.Nombre, "Femenino")
            </span>
            <div class="d-flex justify-content-between align-items-center form-group mt-3 mb-3">
                <input type="submit" value="Confimar Cambios" class="btn btn-success" />
                @Html.ActionLink("Back To List", "Index")
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
